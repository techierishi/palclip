// @ts-check
// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import {Call as $Call, Create as $Create} from "@wailsio/runtime";

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import * as application$0 from "../github.com/wailsapp/wails/v3/pkg/application/models.js";

/**
 * @param {string} content
 * @returns {Promise<void> & { cancel(): void }}
 */
export function CopyItemContent(content) {
    let $resultPromise = /** @type {any} */($Call.ByID(989603669, content));
    return $resultPromise;
}

/**
 * @param {string} name
 * @returns {Promise<string> & { cancel(): void }}
 */
export function GetClipData(name) {
    let $resultPromise = /** @type {any} */($Call.ByID(1512325848, name));
    return $resultPromise;
}

/**
 * @param {string} name
 * @returns {Promise<string> & { cancel(): void }}
 */
export function Greet(name) {
    let $resultPromise = /** @type {any} */($Call.ByID(3460737983, name));
    return $resultPromise;
}

/**
 * just a wrapper to have access to App functions
 * not necessary if you don't plan to do anything with your App on shortcut use
 * @returns {Promise<void> & { cancel(): void }}
 */
export function RegisterHotKey() {
    let $resultPromise = /** @type {any} */($Call.ByID(3452269361));
    return $resultPromise;
}

/**
 * startup is called when the app starts. The context is saved
 * so we can call the runtime methods
 * @param {application$0.App | null} app
 * @returns {Promise<void> & { cancel(): void }}
 */
export function Startup(app) {
    let $resultPromise = /** @type {any} */($Call.ByID(2617913455, app));
    return $resultPromise;
}
